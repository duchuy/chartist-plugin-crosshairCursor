{"version":3,"sources":["chartist-crosshairCursor.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","defaultOptions","wrapperName","type","sendDataOn","plugins","crosshairCursor","options","extend","dataPoints","chart","sendMetaData","points","meta","map","point","eventEmitter","emit","sendFrozenStatus","frozenStatus","currentPoints","filter","current","toPixels","number","generateCursor","div","createElement","setAttribute","element","insertBefore","firstChild","crosshair","querySelector","style","position","display","height","width","inPointArea","cursorPosition","pointPosition","padding","formattedPointData","value","x","axisX","ticks","index","Math","round","y","toggleHighlight","addHighlight","forEach","addClass","removeClass","cursorIsOnPoint","Line","startsWith","id","substr","className","container","parentNode","appendChild","cursor","xCrosshair","yCrosshair","on","data","push","e","frozen","ctPoints","querySelectorAll","pointWidth","getComputedStyle","replace","pointPadding","initial","undefined","length","onclick","stopPropagation","clickToFreeze","onmousemove","pendingEvent","pos","pageX","offsetLeft","pageY","offsetTop","left","top","onPoint","onmouseenter","onmouseleave"],"mappings":"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","file":"chartist-crosshairCursor.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.crosshairCursor'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js plugin that generates a crosshair cursor for a line chart which highlights and notifies you of any data points that fall along the crosshair axis\n   *\n   */\n  /* global Chartist */\n  (function(window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      wrapperName: '',\n      type: 'full',\n      sendDataOn: 'hover'\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.crosshairCursor = function(options) {\n\n      options = Chartist.extend({}, defaultOptions, options);\n      var dataPoints = []\n\n      return function crosshairCursor(chart) {\n\n        function sendMetaData(points) {\n          var meta = points.map(function(point) {\n            return point.meta;\n          })\n          chart.eventEmitter.emit('crosshairCursor:hovered', meta);\n        }\n\n        function sendFrozenStatus(frozenStatus) {\n          chart.eventEmitter.emit('crosshairCursor:frozen', frozenStatus);\n        }\n\n        function currentPoints() {\n          return dataPoints.filter(function(point) {\n            return point.current\n          })\n        }\n\n        function toPixels(number) {\n          return number + \"px\"\n        }\n\n        function generateCursor(type) {\n          var div = document.createElement(\"div\")\n          div.setAttribute(\"id\", \"crosshairCursor-\" + type)\n          element.insertBefore(div, element.firstChild);\n          var crosshair = document.querySelector('#crosshairCursor-' + type)\n          crosshair.style.position = \"absolute\"\n          crosshair.style.display = 'none'\n          if(type == 'x') {\n            crosshair.style.height = '95%'\n            crosshair.style.width = '1px'\n          } else if(type == 'y') {\n            crosshair.style.width = '100%'\n            crosshair.style.height = '1px'\n          }\n          return crosshair\n        }\n\n        function inPointArea(cursorPosition, pointPosition, padding) {\n          return (cursorPosition >= (pointPosition - padding) && cursorPosition <= (pointPosition + padding))\n        }\n\n        function formattedPointData(point) {\n          var meta = point.meta\n          meta.value = point.value\n          meta.value.x = point.axisX.ticks[point.index]\n          return {\n            meta: meta,\n            position: {x: Math.round(point.x), y: Math.round(point.y)},\n            element: point.element\n          }\n        }\n\n        function toggleHighlight(points, addHighlight) {\n          points.forEach(function(point) {\n            if(addHighlight) {\n              point.element.addClass('crosshairCursor-highlight')\n            } else {\n              point.element.removeClass('crosshairCursor-highlight')\n            }\n          })\n        }\n\n        function cursorIsOnPoint(cursorPosition, pointPosition, padding) {\n          if(options.type == 'x') {\n            return inPointArea(cursorPosition.x, pointPosition.x, padding)\n          } else if(options.type == 'y') {\n            return inPointArea(cursorPosition.y, pointPosition.y , padding)\n          } else if(options.type == 'full') {\n            return inPointArea(cursorPosition.x, pointPosition.x, padding) || inPointArea(cursorPosition.y, pointPosition.y , padding)\n          }\n        }\n\n        if(chart instanceof Chartist.Line) {\n\n          var element = document.createElement('div')\n          if(options.wrapperName.startsWith('#')) {\n            element.id = options.wrapperName.substr(1)\n          } else if(options.wrapperName.startsWith('.')) {\n            element.className = options.wrapperName.substr(1)\n          } else {\n            throw('Must be a class or id!')\n          }\n          chart.container.parentNode.insertBefore(element, chart.container);\n          element.appendChild(chart.container);\n          element.className = element.className + \" crosshairCursor-wrapper\"\n          element.style.cursor = \"pointer\"\n          element.style.position = \"relative\"\n\n          var xCrosshair = generateCursor('x')\n          var yCrosshair = generateCursor('y')\n\n          chart.on('draw', function(data) {\n            if(data.type == \"point\") {\n              dataPoints.push(formattedPointData(data))\n            }\n          });\n\n          chart.on('created', function(e) {\n            var created = true\n            var frozen = false\n            var ctPoints = document.querySelectorAll('.ct-point')\n            var pointWidth = window.getComputedStyle(ctPoints[0])[\"stroke-width\"].replace('px', '')\n            var pointPadding = +pointWidth/2\n\n            var initial = options.initial > 0 ? options.initial - 1 : undefined\n            if(options.initial) dataPoints[initial].current = true\n            if(currentPoints().length) { \n              sendMetaData(currentPoints())\n              toggleHighlight(currentPoints(), true)\n            }\n\n            element.onclick = function(e) {\n              e.stopPropagation();\n              if(!frozen && currentPoints().length && options.sendDataOn == 'click') {\n                sendMetaData(currentPoints())\n                if(options.clickToFreeze) {\n                  frozen = !frozen\n                  sendFrozenStatus(frozen)\n                }\n              } else if(options.clickToFreeze) {\n                frozen = !frozen\n                sendFrozenStatus(frozen)\n              }\n            }\n\n            if(dataPoints.length) {\n              element.onmousemove = function(e){\n                if(!frozen) {\n                  var pendingEvent = false\n                  var pos = {};\n                  pos.x = e.pageX - this.offsetLeft\n                  pos.y = e.pageY - this.offsetTop\n                  xCrosshair.style.left = toPixels(pos.x)\n                  yCrosshair.style.top = toPixels(pos.y)\n\n\n                  dataPoints.forEach(function(point) {\n                    onPoint = cursorIsOnPoint(pos, point.position, pointPadding)\n                    toggleHighlight([point], onPoint)\n                    if(point.current !== onPoint && !pendingEvent) {\n                      pendingEvent = true\n                    }\n                    point.current = onPoint\n                  })\n\n                  if(currentPoints().length && options.sendDataOn == 'hover' && pendingEvent) { \n                    sendMetaData(currentPoints())\n                  } else if(!currentPoints().length && pendingEvent) {\n                    sendMetaData([])\n                  }\n                }\n              }\n              element.onmouseenter = function(e){\n                if(options.type == 'x') {\n                  xCrosshair.style.display = '';\n                } else if(options.type == 'y') {\n                  yCrosshair.style.display = '';\n                } else if(options.type == 'full') {\n                  xCrosshair.style.display = '';\n                  yCrosshair.style.display = '';\n                }\n              }\n              element.onmouseleave = function(e){\n                if(!frozen) {\n                  if(options.type == 'x') {\n                    xCrosshair.style.display = 'none';\n                  } else if(options.type == 'y') {\n                    yCrosshair.style.display = 'none';\n                  } else if(options.type == 'full') {\n                    xCrosshair.style.display = 'none';\n                    yCrosshair.style.display = 'none';\n                  }\n                }\n              };\n            }\n\n          })\n        }\n\n      };\n    };\n\n  }(window, document, Chartist));\n  return Chartist.plugins.crosshairCursor;\n\n}));\n"]}