{"version":3,"sources":["chartist-plugin-crosshairCursor.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","plugins","crosshairCursor","options","CrosshairCursor","chart","_chart","_chartWrapper","undefined","frozen","_pointArea","calculatePointArea","sendMetaData","freezeChange","currentPoints","createCrosshairCursor","destroyCrosshairCursor","styleCrosshairCursor","unwrapChart","showCrosshairCursor","moveCrosshairCursor","highlightCurrentPoints","clickFn","hideCrosshairCursor","dataPoints","noop","defaultOptions","wrapChart","chartWrapper","createElement","className","container","parentNode","insertBefore","appendChild","style","cursor","position","x","y","click","hover","styles","backgroundColor","width","height","extend","prototype","create","self","_crosshairCursor","hide","addEventListener","bind","move","show","destroy","reset","e","call","highlightedPoints","freeze","unfreeze","isFrozen","element","points","meta","map","point","eventEmitter","emit","filter","current","type","div","firstChild","querySelector","remove","inPointArea","cursorPosition","pointPosition","padding","formatPointData","deserialize","value","axisX","ticks","index","Math","round","toggleHighlight","highlight","addClass","removeClass","cursorIsOnPoint","outerHTML","innerHTML","ctPoints","querySelectorAll","getComputedStyle","replace","display","crosshairCursorPosition","pageX","offsetLeft","pageY","offsetTop","left","top","pointArea","highlighted","stopPropagation","created","Line","on","data","push"],"mappings":"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","file":"chartist-plugin-crosshairCursor.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.crosshairCursor'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js plugin that generates a crosshair cursor for a line chart which highlights and notifies you of any data points that fall along the crosshair axis\n   *\n   */\n  /* global Chartist */\n  (function(window, document, Chartist) {\n    'use strict';\n\n    Chartist.plugins = Chartist.plugins || {};\n\n    Chartist.plugins.crosshairCursor = function(options) {\n      var dataPoints = [];\n      var noop = function() {};\n\n      //private methods\n      var sendMetaData, freezeChange, currentPoints, createCrosshairCursor, destroyCrosshairCursor, styleCrosshairCursor, unwrapChart, calculatePointArea, showCrosshairCursor, moveCrosshairCursor, highlightCurrentPoints, clickFn, hideCrosshairCursor;\n\n      var defaultOptions = {\n        wrapChart: function(chart) {\n          var chartWrapper = document.createElement('div');\n          chartWrapper.className = 'crosshairCursor-wrapper';\n          chart.container.parentNode.insertBefore(chartWrapper, chart.container);\n          chartWrapper.appendChild(chart.container);\n          chartWrapper.style.cursor = 'pointer';\n          chartWrapper.style.position = 'relative';\n\n          return chartWrapper;\n        },\n        x: true,\n        y: true,\n        click: noop,\n        hover: noop,\n        freezeChange: noop,\n        styles: {\n          x: {\n            backgroundColor: '#dedede',\n            width: '1px',\n            height: '95%'\n          },\n          y: {\n            backgroundColor: '#dedede',\n            width: '100%',\n            height: '1px'\n          }\n        }\n      };\n\n      options = Chartist.extend({}, defaultOptions, options);\n\n      function CrosshairCursor(chart) {\n        this._chart = chart;\n        this._chartWrapper = undefined;\n        this.frozen = false;\n        this._pointArea = calculatePointArea();\n      }\n\n      CrosshairCursor.prototype.wrapChart = function() {\n        if(this._chartWrapper) { return this._chartWrapper; }\n\n        this._chartWrapper = options.wrapChart(this._chart);\n      };\n\n      CrosshairCursor.prototype.create = function() {\n        var self = this;\n        this.wrapChart();\n\n        self._crosshairCursor = {};\n        self._crosshairCursor.x = createCrosshairCursor(self._chartWrapper, 'x');\n        self._crosshairCursor.y = createCrosshairCursor(self._chartWrapper, 'y');\n        self.hide(self._crosshairCursor);\n\n        self._chartWrapper.addEventListener('click', clickFn.bind(self));\n        self._chartWrapper.addEventListener('mousemove', self.move.bind(self));\n        self._chartWrapper.addEventListener('mouseenter', self.show.bind(self));\n        self._chartWrapper.addEventListener('mouseleave', self.hide.bind(self));\n      };\n\n      CrosshairCursor.prototype.destroy = function() {\n        var self = this;\n\n        destroyCrosshairCursor(self._crosshairCursor);\n\n        unwrapChart(self._chartWrapper);\n      };\n\n      CrosshairCursor.prototype.show = function() {\n        showCrosshairCursor(this._crosshairCursor);\n      };\n\n      CrosshairCursor.prototype.hide = function() {\n        if(!this.frozen) {\n          hideCrosshairCursor(this._crosshairCursor);\n        }\n      };\n\n      CrosshairCursor.prototype.reset = function() {\n        this.frozen = false;\n        this.hide();\n      };\n\n      CrosshairCursor.prototype.move = function(e) {\n        if(!this.frozen){\n          var position = moveCrosshairCursor.call(this._chartWrapper, e, this._crosshairCursor);\n          var highlightedPoints = highlightCurrentPoints(position, this._pointArea);\n          sendMetaData.call(this, highlightedPoints);\n        }\n      };\n\n      CrosshairCursor.prototype.freeze = function() {\n        this.frozen = true;\n        freezeChange.call(this);\n      };\n\n      CrosshairCursor.prototype.unfreeze = function() {\n        this.frozen = false;\n        freezeChange.call(this);\n      };\n\n      CrosshairCursor.prototype.isFrozen = function() {\n        return this.frozen;\n      };\n\n      CrosshairCursor.prototype.currentPoints = function() {\n        return currentPoints();\n      };\n\n      CrosshairCursor.prototype.element = function() {\n        return this._chartWrapper;\n      };\n\n      sendMetaData = function(points) {\n        var meta = points.map(function(point) {\n          return point.meta;\n        });\n        options.hover(this, meta);\n        this._chart.eventEmitter.emit('crosshairCursor:hovered', meta);\n      };\n\n      freezeChange = function() {\n        options.freezeChange(this.frozen);\n        this._chart.eventEmitter.emit('crosshairCursor:frozen', this.frozen);\n      };\n\n      currentPoints = function() {\n        return dataPoints.filter(function(point) {\n          return point.current;\n        });\n      };\n\n      createCrosshairCursor = function(chartWrapper, type) {\n        var div = document.createElement('div');\n        div.className = 'crosshairCursor-' + type;\n        chartWrapper.insertBefore(div, chartWrapper.firstChild);\n        var crosshairCursor = chartWrapper.querySelector('.crosshairCursor-' + type);\n        crosshairCursor.style.position = 'absolute';\n\n        styleCrosshairCursor(crosshairCursor, type);\n\n        return crosshairCursor;\n      };\n\n      destroyCrosshairCursor = function(crosshairCursor) {\n        crosshairCursor.x.remove();\n        crosshairCursor.y.remove();\n      };\n\n      styleCrosshairCursor = function(crosshairCursor, type) {\n        crosshairCursor.style.height = options.styles[type].height;\n        crosshairCursor.style.width = options.styles[type].width;\n        crosshairCursor.style.backgroundColor = options.styles[type].backgroundColor;\n      };\n\n      var inPointArea = function(cursorPosition, pointPosition, padding) {\n        return (cursorPosition >= (pointPosition - padding) && cursorPosition <= (pointPosition + padding));\n      };\n\n      var formatPointData = function(point) {\n        var meta = Chartist.deserialize(point.meta);\n        meta.value = point.value;\n        meta.value.x = point.axisX.ticks[point.index];\n        return {\n          meta: meta,\n          position: {x: Math.round(point.x), y: Math.round(point.y)},\n          element: point.element\n        };\n      };\n\n      var toggleHighlight = function(point, highlight) {\n        if(highlight) {\n          point.element.addClass('crosshairCursor-highlight');\n        } else {\n          point.element.removeClass('crosshairCursor-highlight');\n        }\n      };\n\n      var cursorIsOnPoint = function(cursorPosition, pointPosition, padding) {\n        if(options.x && options.y) {\n          return inPointArea(cursorPosition.x, pointPosition.x, padding) || inPointArea(cursorPosition.y, pointPosition.y , padding);\n        } else if(options.x) {\n          return inPointArea(cursorPosition.x, pointPosition.x, padding);\n        } else if(options.y) {\n          return inPointArea(cursorPosition.y, pointPosition.y , padding);\n        }\n      };\n\n      unwrapChart = function(chartWrapper) {\n        chartWrapper.outerHTML = chartWrapper.innerHTML;\n      };\n\n      calculatePointArea = function() {\n        var ctPoints = document.querySelectorAll('.ct-point');\n        var pointWidth = window.getComputedStyle(ctPoints[0])['stroke-width'].replace('px', '');\n        return +pointWidth/2;\n      };\n\n      showCrosshairCursor = function(crosshairCursor){\n        if(options.x && options.y) {\n          crosshairCursor.x.style.display = '';\n          crosshairCursor.y.style.display = '';\n        } else if(options.x) {\n          crosshairCursor.x.style.display = '';\n        } else if(options.y) {\n          crosshairCursor.y.style.display = '';\n        }\n      };\n\n      moveCrosshairCursor = function(e, crosshairCursor){\n        var crosshairCursorPosition = {};\n\n        crosshairCursorPosition.x = e.pageX - this.offsetLeft;\n        crosshairCursorPosition.y = e.pageY - this.offsetTop;\n\n        crosshairCursor.x.style.left = crosshairCursorPosition.x + 'px';\n        crosshairCursor.y.style.top = crosshairCursorPosition.y + 'px';\n\n        return crosshairCursorPosition;\n      };\n\n      highlightCurrentPoints = function(crosshairCursorPosition, pointArea) {\n        return dataPoints.filter(function(point) {\n          var highlighted = cursorIsOnPoint(crosshairCursorPosition, point.position, pointArea);\n          toggleHighlight(point, highlighted);\n          point.current = highlighted;\n          return highlighted;\n        });\n      };\n\n      clickFn = function(e) {\n        e.stopPropagation();\n        var meta = currentPoints().map(function(point) {\n          return point.meta;\n        });\n        options.click(this, meta);\n        this._chart.eventEmitter.emit('crosshairCursor:click', meta);\n      };\n\n      hideCrosshairCursor = function(crosshairCursor){\n        crosshairCursor.x.style.display = 'none';\n        crosshairCursor.y.style.display = 'none';\n      };\n\n      return function crosshairCursor(chart) {\n        var created = false;\n\n        if(chart instanceof Chartist.Line) {\n\n          chart.on('draw', function(data) {\n            if(data.type === 'point') {\n              if(data.index === 0) { dataPoints = []; }\n              dataPoints.push(formatPointData(data));\n            }\n          });\n\n          chart.on('created', function() {\n            if(!created) {\n              created = true;\n              chart.crosshairCursor = new CrosshairCursor(chart);\n              chart.crosshairCursor.create();\n            } else {\n              chart.crosshairCursor.reset();\n            }\n          });\n\n        }\n\n      };\n    };\n\n\n  }(window, document, Chartist));\n  return Chartist.plugins.crosshairCursor;\n\n}));\n"]}