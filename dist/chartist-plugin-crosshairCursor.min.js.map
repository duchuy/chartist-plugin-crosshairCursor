{"version":3,"sources":["chartist-plugin-crosshairCursor.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","defaultOptions","wrapperName","type","sendDataOn","plugins","crosshairCursor","options","extend","dataPoints","chart","sendMetaData","points","meta","map","point","eventEmitter","emit","sendFrozenStatus","frozenStatus","currentPoints","filter","current","toPixels","number","generateCursor","element","div","createElement","setAttribute","insertBefore","firstChild","crosshair","querySelector","style","position","display","backgroundColor","height","width","inPointArea","cursorPosition","pointPosition","padding","formattedPointData","deserialize","value","x","axisX","ticks","index","Math","round","y","toggleHighlight","addHighlight","forEach","addClass","removeClass","cursorIsOnPoint","Line","startsWith","id","substr","className","container","parentNode","appendChild","cursor","xCrosshair","yCrosshair","on","data","push","frozen","ctPoints","querySelectorAll","pointWidth","getComputedStyle","replace","pointPadding","initial","undefined","length","onclick","e","stopPropagation","clickToFreeze","onmousemove","pendingEvent","pos","pageX","offsetLeft","pageY","offsetTop","left","top","onPoint","onmouseenter","onmouseleave"],"mappings":"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","file":"chartist-plugin-crosshairCursor.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.crosshairCursor'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js plugin that generates a crosshair cursor for a line chart which highlights and notifies you of any data points that fall along the crosshair axis\n   *\n   */\n  /* global Chartist */\n  (function(window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      wrapperName: '',\n      type: 'full',\n      sendDataOn: 'hover'\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.crosshairCursor = function(options) {\n\n      options = Chartist.extend({}, defaultOptions, options);\n      var dataPoints = [];\n\n      return function crosshairCursor(chart) {\n\n        var sendMetaData = function(points) {\n          var meta = points.map(function(point) {\n            return point.meta;\n          });\n          chart.eventEmitter.emit('crosshairCursor:hovered', meta);\n        };\n\n        var sendFrozenStatus = function(frozenStatus) {\n          chart.eventEmitter.emit('crosshairCursor:frozen', frozenStatus);\n        };\n\n        var currentPoints = function() {\n          return dataPoints.filter(function(point) {\n            return point.current;\n          });\n        };\n\n        var toPixels = function(number) {\n          return number + 'px';\n        };\n\n        var generateCursor = function(type, element) {\n          var div = document.createElement('div');\n          div.setAttribute('id', 'crosshairCursor-' + type);\n          element.insertBefore(div, element.firstChild);\n          var crosshair = document.querySelector('#crosshairCursor-' + type);\n          crosshair.style.position = 'absolute';\n          crosshair.style.display = 'none';\n          crosshair.style.backgroundColor = '#dedede';\n          if(type === 'x') {\n            crosshair.style.height = '95%';\n            crosshair.style.width = '1px';\n          } else if(type === 'y') {\n            crosshair.style.width = '100%';\n            crosshair.style.height = '1px';\n          }\n          return crosshair;\n        };\n\n        var inPointArea = function(cursorPosition, pointPosition, padding) {\n          return (cursorPosition >= (pointPosition - padding) && cursorPosition <= (pointPosition + padding));\n        };\n\n        var formattedPointData = function(point) {\n          var meta = Chartist.deserialize(point.meta);\n          meta.value = point.value;\n          meta.value.x = point.axisX.ticks[point.index];\n          return {\n            meta: meta,\n            position: {x: Math.round(point.x), y: Math.round(point.y)},\n            element: point.element\n          };\n        };\n\n        var toggleHighlight = function(points, addHighlight) {\n          points.forEach(function(point) {\n            if(addHighlight) {\n              point.element.addClass('crosshairCursor-highlight');\n            } else {\n              point.element.removeClass('crosshairCursor-highlight');\n            }\n          });\n        };\n\n        var cursorIsOnPoint = function(cursorPosition, pointPosition, padding) {\n          if(options.type === 'x') {\n            return inPointArea(cursorPosition.x, pointPosition.x, padding);\n          } else if(options.type === 'y') {\n            return inPointArea(cursorPosition.y, pointPosition.y , padding);\n          } else if(options.type === 'full') {\n            return inPointArea(cursorPosition.x, pointPosition.x, padding) || inPointArea(cursorPosition.y, pointPosition.y , padding);\n          }\n        };\n\n        if(chart instanceof Chartist.Line) {\n\n          var element = document.createElement('div');\n          if(options.wrapperName.startsWith('#')) {\n            element.id = options.wrapperName.substr(1);\n          } else if(options.wrapperName.startsWith('.')) {\n            element.className = options.wrapperName.substr(1);\n          } else {\n            throw('Must be a class or id!');\n          }\n          chart.container.parentNode.insertBefore(element, chart.container);\n          element.appendChild(chart.container);\n          element.className = element.className + ' crosshairCursor-wrapper';\n          element.style.cursor = 'pointer';\n          element.style.position = 'relative';\n\n          var xCrosshair = generateCursor('x', element);\n          var yCrosshair = generateCursor('y', element);\n\n          chart.on('draw', function(data) {\n            if(data.type === 'point') {\n              if(data.index === 0) { dataPoints = []; }\n              dataPoints.push(formattedPointData(data));\n            }\n          });\n\n          chart.on('created', function() {\n            var frozen = false;\n            var ctPoints = document.querySelectorAll('.ct-point');\n            var pointWidth = window.getComputedStyle(ctPoints[0])['stroke-width'].replace('px', '');\n            var pointPadding = +pointWidth/2;\n\n            var initial = options.initial > 0 ? options.initial - 1 : undefined;\n            if(options.initial) { dataPoints[initial].current = true; }\n            if(currentPoints().length) { \n              sendMetaData(currentPoints());\n              toggleHighlight(currentPoints(), true);\n            }\n\n            element.onclick = function(e) {\n              e.stopPropagation();\n              if(!frozen && currentPoints().length && options.sendDataOn === 'click') {\n                sendMetaData(currentPoints());\n                if(options.clickToFreeze) {\n                  frozen = !frozen;\n                  sendFrozenStatus(frozen);\n                }\n              } else if(options.clickToFreeze) {\n                frozen = !frozen;\n                sendFrozenStatus(frozen);\n              }\n            };\n\n            if(dataPoints.length) {\n              element.onmousemove = function(e){\n                if(!frozen) {\n                  var pendingEvent = false;\n                  var pos = {};\n                  pos.x = e.pageX - this.offsetLeft;\n                  pos.y = e.pageY - this.offsetTop;\n                  xCrosshair.style.left = toPixels(pos.x);\n                  yCrosshair.style.top = toPixels(pos.y);\n\n\n                  dataPoints.forEach(function(point) {\n                    var onPoint = cursorIsOnPoint(pos, point.position, pointPadding);\n                    toggleHighlight([point], onPoint);\n                    if(point.current !== onPoint && !pendingEvent) {\n                      pendingEvent = true;\n                    }\n                    point.current = onPoint;\n                  });\n\n                  if(currentPoints().length && options.sendDataOn === 'hover' && pendingEvent) { \n                    sendMetaData(currentPoints());\n                  } else if(!currentPoints().length && pendingEvent) {\n                    sendMetaData([]);\n                  }\n                }\n              };\n              element.onmouseenter = function(){\n                if(options.type === 'x') {\n                  xCrosshair.style.display = '';\n                } else if(options.type === 'y') {\n                  yCrosshair.style.display = '';\n                } else if(options.type === 'full') {\n                  xCrosshair.style.display = '';\n                  yCrosshair.style.display = '';\n                }\n              };\n              element.onmouseleave = function(){\n                if(!frozen) {\n                  if(options.type === 'x') {\n                    xCrosshair.style.display = 'none';\n                  } else if(options.type === 'y') {\n                    yCrosshair.style.display = 'none';\n                  } else if(options.type === 'full') {\n                    xCrosshair.style.display = 'none';\n                    yCrosshair.style.display = 'none';\n                  }\n                }\n              };\n            }\n          });\n        }\n\n      };\n    };\n\n  }(window, document, Chartist));\n  return Chartist.plugins.crosshairCursor;\n\n}));\n"]}